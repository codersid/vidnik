//Change Log open with TextEdit

Vidnik

Based on QTKitCaptureProgrammingGuide.pdf  (in ~/Documents/Documents/Programming )

2/21/08 6pm: TubeDiarist fetches and caches the list of legal categories from the YouTube Server. This the first time the program has accesses both audio+video, plus making http requests.

2/22/08
* TubeDiarist now has a current/total display in playback mode.
* dropping a movie on the app icon implicitly creates a playlist length 1 and selects the zeorth entry.

2/26/08
* uniqify the keywords when setting them into the model.
* alpha sort the fields of TDModelMovie in init, copy, encode, decode, setters/getters. This should make the class more maintainable.
* you can drag movies to playlist.
* movies are only added once (a second drag won't re-add them)
* you can select movies in the playlist, and they show in the video preview window, and can be played.

2/27/08
* documents ere too big. but, I'm not sure if the new smaller thumbnails are draswable. they don't appear to be.

2/28/08
* details copied between master view/detail view, with undo/redo.
* auth sheet shows
* actually authenticates : but the Service that holds the auth data is currently a static of the AuthSheet. I need to refactor so it, and the authManager, are owned by the document.
* app icon - thanks to Cole.
* doc icon - thanks to Cole.


2/29/08
* document owns service. username/password sheet interacts with service, document, keychain, so each document can reference a different account. GMClientAuthManager and GMClientAuthWindowController are no longer included in this program.
* help viewer was putting up an error message. Fixed.
* saves path to most recent doc. Reopens most recent doc on app start.
* double clicking the app should re-opens the last document, if possible.

3/1/08
* added New.png - a white small pic of a camera
* added Missing.png - a white small pic of an X
* "+" button undo-ably adds a new movie.
* New document created with a new movie.
* new movie in playlist has an appropriate playlist
* if you have a new entry in the play list, and you record a segment, the segment is associated with that entry.
* tested all combinations of {has, doesn't have}username/password{save in keychain,don't save in keychain}
* uploaded a pair of files.
* Added the "show in Finder" contextual menu command. But it works on the current selection, not necessarily what you clicked on.
* Added the "show web page" contextual menu command. But it works on the current selection, not necessarily what you clicked on.

3/3/08 - begin counting 15 bugs for next weeks snippets.
CL 6592474 <=> Version 0.1

* changed Gear button icon to add downward pointing triangle
* click on the Gear button and an icon pops down.

3/4/08
* compiles and runs on Tiger: note: it will be an ongoing process for me, to reverify this.
* when app becomes active, it re-validates the file aliases.
* adopted the open-source/Xcodeconfigs.
* dragging a movie into the playlist creates a TDModelMovie in the Ready state, with a category assigned
* Initial document is re-opened only on start up.

CL 6609619 <=> Version 0.2

3/5/08
* copy
* cut movie
* paste movie
* drag movie
* delete movie
* undo cut movie
* undo paste movie
* undo drag movie
* undo delete movie
* redo cut movie
* redo delete movie
* redo paste movie
* redo drag movie
* dragging movies to trash, with undo and redo

* File Menu does New Movie instead of New document to make it easier to re-use existing document.

CL 6620921 <=> Version 0.3

3/6/08
* Cole's new nibs
* since documents are supposed to map to accounts, put the account name in the window title.
* when dragging, show destination feedback as between existing items.
* splitter view improved.
* "show in Finder" contextual menu command works on the current cell, even if it isn't selected.
* "show web page"  contextual menu command works on the current cell, even if it isn't selected.
* Fixed:video stretched beyond what it should be.
* dragging start or end marker should update time display.
* if a paste would do a move, and the result is the same as not pasting, then skip the paste, so we have a clean undo history.
* detail pane now shows status text at bottom

CL 6634008 <=> Version 0.4

3/13/08
* Wrote a ProgressCell that manages reporting progress to the user. Compiled and linked in, but not used yet.
* async Movie open.

3/17/08
* when draagging multiple movies onto playlist, the drag is sorted as in the Finder.
* when selecting a movie in the middle of the playlist, delete, then delete again, the selection was
  pointing at a deleted movie internally. Fixed.
* fixed bug where program improperly attempts to deselect.
* fixed bug where program crashes attempting to start a record session when there is no camera. 
* trim to selection, undo trim to selection

3/18/08
* when table ceases to be responder, it sets the edit menu items to something neutral at start of ceasing, so if new responder sets them to something else, its chnages won't be overwritten.
* Fixed: when I click in blank space in the table, the first time, the attributes controller is cleared correctly.
  click on a tableItem, click on blanks space, the second the attributes controller is NOT cleared.
* meter doesn't update correctly on trim to selection.
* undo/redo of description was causing text to be doubled. Fix was turning of undo for the NSTextView in I.B.
* status text updating.
* Fixed: movies were being incorrectly reported as not-ready-to-upload

CL 6732497 <=> Version 0.5

3/19/08 
* added New back in as <Option><Command>N
* trim saved to disk on upload or save.
* trim/undo trim/redo trim/ adjusts the poster image.

3/20/08 
* New icons, away from YouTube.
* Unit test of upload (for debugging progress meters)
* When legal said OK, rename to "Vidnik"

CL 6750486 <=> Version 0.6

3/21/08 :
* I've dropped OldQTKit from the app. 
* fixed bug where path to last document wasn't being saved to preferences on disk
* upload progress meters!

CL 6759032 <=> Version 0.7

* All applescript model properties on app, window, document, movie work, at least read-only.
* works: tell app "Vidnik" to open POSIX file "/Users/oster/Movies/TubeDiarist/t2.tdiary"
* works:
tell application "Vidnik"
	select all movie 2 of document 1
	delay 1
	select none movie 2 of document 1
end tell
tell application "Vidnik"
	make new document with properties {name:"john doe"}
	delay 1
  close document 1 saving ask
end tell
tell application "Vidnik"
	tell document 1
		set name of movie 1 to "Hello there"
		set category of movie 1 to "News"
		set description of movie 1 to "Hello there"
		set keywords of movie 1 to {"Hello", "there"}
	end tell
end tell
tell application "Vidnik"
	make new movie at end of document 1 with properties {name:"Hello There", category:"News", description:"description - Hello there", keywords:{"Hello", "there"}}
end tell

* Cell drawing, mouse tracking cleaned up.
* cancel button on the upload progress meters tracks.
* description, tags are all mandatory. We verify before upload.

3/26/08 :
* When uploading, cancel button cancels.
* When opening, error-uploading state, cancelled-uploading state is cleared

CL 6786856 <=> Version 0.8

* No longer depends on any file in Shared (except GData)

CL 6788203 --> remove OldQTKit sources
* Trim, select all menu commands work, even when item in table view is selected.

3/27/08 :

* Added Sparkle, verified that we can compile, run unit tests, PowerPC & Intel using source uploaded to svn.
* p4 and svn differ: svn version has sparkle in app bundle, and in mainmenu.nib
* Upload to svn
* new movies get a default category assigned.
* "NeedsMovie" was missing from localizable.strings.

3/28/08 :
The document farms out its controller duties to three sub-controllers. 
* Put these on the responder chain so they can manage their own actions. 
* Remove code in TDWindow, TDOutlineView that was manually routing actions to the delegate chain.
* Add a web menu with a "go to my page" item.
* Remove some early files that are never used.

3/30/08 : 
* missing meta-data fields have a red caption.
* menu command- openYouTubePage:
* menu command- stopUploading:
* menu command- upload:
* menu command- stopRecording:
* menu command- record:
* toolTips
* changing the selected movie scrolls the newly selected movie into visibility
* stripes in empty part of table are same height as those in the used part.
* copyLink: command on contextual menu.
* open dialog was not showing our document type.
* open routine was returning an error even on success
* corrupt document error didn't have localized description.
* badge the dock icon during recording

3/31/08 : 
* tab or backtab out of the description field.
* in-place edit the title of a movie in the left table.

4/1/08 : 
GData Checked out external at revision 125.
Sparkle Checked out external at revision 143.

4/2/08 :
* fixed: "record/stoprecording" menu commands were enabled even when current selection already has a movie.

4/3/08 :
* after a paste or drag, new item is selected.
* moved Change Account command to Web menu. Removed "Paste & Match Style"
* disable the text fields when there is no selection.
* "Ready To Upload" movie state should be "Set Account", if document has no account set.
* "Change Account" menu item should be "Set Account" is no account set.
* Added "Learn More" button to signin sheet: "http://www.youtube.com/signup"
* Tested with newly created YouTube account, not connected to my work.

CL 6858885 <=> Version 0.12.0

4/25/08 :
* Restrict account name to rules set by Youtube on http://www.youtube.com/signup:
"Your username can only contain letters A-Z or numbers 0-9"

 ------- Version 0.13.0 (first public release)

5/12/08 :
* Removed no-op "internal" checkbox on login dialog box
* fixed crash on quit in OS X 10.4
* removed the dialog box that talks about scheduled update checking on each launch.

5/13/08 :
* Add preferences dialog box, menu command.
* Add a preference to check for updates on startup
* Add a button to the preferences dialog to check now:
  (it was easier to add the button than it was to explain that the app has a 
  "check for updates" menu item on its application menu.)
* Fix compile problems with unit tests.
* Restrict Sparkle to a specific version.
* When there is no movie open, the menu item says "New Document'
* Clicking record with nothing selected in the table gives the resulting movie a cell in the table.

5/14/08 : Rev58 0.13.1
New TDConfiguration methods (i.e. preference file keys):
- (long long)diskCushion;
- (BOOL)isAnyUserNameAllowed;   // wired up
- (NSString *)movieFolderPath;  // wired up
- (long long)maxMovieSize;
- (long)maxMovieDuration
* missing camera:Record button re-enables after pressing record button.
* error messages for missing camera, camera in use. (session [inputs count] == 0)

5/15/08 : Rev59 0.13.2
* Bulletproofing: NSKeyedUnarchiver throws on error, and NSPropertyListSerialization returns an error string.
  * convert the exception or string to an error and connect it to our -presentError: machinery.
* What happens if you drag a movie (or a group of them) from the Finder to:
  * a Vidnik window
  * the Vidnik icon in the Finder or the Dock.
  Answer: this is essentually a drag&drop or paste: if on App icon, then if the movie is associated with any open window, open that window and select it.
  * if not in any window, add it to end of front window and select it.
  * if no open window, try to reopen previous document. 
  * if that fails, bring up new untitled document.
5/16/08
  * Fixed typo that broke recording (path to save recording files wasn't correct)
  * Added a build phase to delete the neccessary localizations in Sparkle. .zip shrinks: 1.1M -> 0.6M !
  * fixed some bugs dragging items around in the table of segments.
  * While adding regrssion tests to the unit test suite to try and test the above dragging code, I discovered, 
  * fixed bugs in the objectSpecifier code for appleScript handling.
  * wrote additional appleScript unit tests.
  * laid the groundwork for a preprocessing movie step, to re-write with no edit list before uploading.
  * improved online help
  * Debug menu, controlled by NSDebug environment variable in the DEBUG version that will let me integrate in
    the checks: need to rewrite, rewrite.
5/19/08
  * indicator that a movie has been uploaded.
  * error message if can’t find new enough version of Quicktime.
  * test showed: writing the movie flattened doesn't remove the edit list.
  * wrote test code to onfigure the MPeg 4 exporter, save config to disk, read it back. 
    Sample config as a data file in the project. (not yet read from app bundle.)
5/22/08
  This is an example of adding something to the model:
  * added isPrivate to the model, the i/o, the uploader, appleScript support, undo handling, undo edit menu localization
  - still do to: add isPrivate to the U.I.
  - Test! actually upload a few private movies.
  - Automate: I tried a few tests in appleScript, (which reminded me to add the undo/diry document handling.)

TODO:
- better names for movies on disk.
- Change of account doesn't allow video upload to the new account
- indicator that movie is bigger than [TDConfig() maxMovieSize] or [TDConfig() maxMovieDuration].
- indicator that movie has consumed into [TDConfig() diskCushion] space.

- menu commands split, join.
- an upload is not a save. better undo handling of trim across upload.
- deleting a movie should move the actual movie file to the trash. undo should move it back.
- check movie status before querying attributes. 
  if not ready, schedule to recheck when becomes ready?
- ModelMovie error state policy
- Not clear that you are recording.
- Not clear when we finish queuing versus when upload is done.

- playlist management: a playlist is a list of movies.
  - can't cut video segments.
  - splitting movies 
  - joining movies
  - items in playlist are just name and image. Should show more.
- splitter view needs work: grow window, give left pane min size, shrink window. shrinks past min. can't programmatically resize.
- video frame should be centered as window grows and shrinks

- no control over capture format (I want 30fps, not 29.99)
- no switching of preview from window to window
- no support for multiple cameras
- dragging start marker so it drags end marker, then back, doesn't restore end marker
- with multiple movies, can I exceed RAM?
- consider a unit test that verifies that actions and outlets are as expected.
- consider a system test with two computers: 
  Computer 1 runs an animation.
  Computer 2 pointed at computer 1 records it, compares with reference video.
    uploads it, waits, downloads the encoded video, compares with source video.
  
- on leopard, after a few runs, we get into a state where AVCAssistant runs, but produces no data,
  not event for PhotoBooth.
- test with 1000 movies.
- test playing with the U.I. during record. 

- creating thumbnails, movies: the work is done synchronously. too slow.
- should poll, get state of movies currently processing.



- currently, we ask for a video device, and if that fails grab a mux device. That happens to work for the built-in iSight and FirewireDV cameras I tested. But, it isn't very robust. 

I used to ask for a mux first, then if that failed ask for video+audio. But the iSight would return itself as a mux device, even though it had no audio.

We should ask for a mux first, then query the mux for an audio channel. If that fails, then ask for a separate audio device (and a similar check for video device, for that matter) 

We should have error handling for the case of getting video but not audio.

- if there is only one channel of sound, make a monaural movie.

Version 2:
- Possibly: allow a different segment maker that uses an audio track, a series of stills, and transition points.
- Possibly: effects like Photobooth. 
- Possibly: Backgrounds like iChat. 
- Possibly: Crop a scene using a start, end rect.
- Possibly: make a visual entry on Google Calendar.

- this should be automated as a Build All target.
TO release an alpha:
* make sure PRODUCT_VERSION symbol is appropriately defined in project.
* Build Release vesion,
* Place in appropriately named folder with:
  ReadMe
  ReleaseNotes
  custom icon.
* Zip, unload, rebuild symbolic link, move prev to "old"
