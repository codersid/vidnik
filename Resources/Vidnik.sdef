<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Vidnik Terminology">
	<!--
		STANDARD SUITE
	-->
	<suite name="Standard Suite" code="Core"
		description="Common classes and commands for all applications.">

		<cocoa name="NSCoreSuite"/>

		<command name="open" code="aevtodoc"
			description="Open a document.">
			<direct-parameter description="The file(s) to be opened.">
				<type type="file"/>
				<type type="file" list="yes"/>
			</direct-parameter>
			<!--
				According to TN2106, 'open' should return the resulting document
				object.  However, the Cocoa implementation does not do this yet.
			<result type="specifier"/>
			-->
		</command>

		<enumeration name="save options" code="savo">
			<enumerator name="yes" code="yes " description="Save the file."/>
			<enumerator name="no" code="no  " description="Do not save the file."/>
			<enumerator name="ask" code="ask "
				description="Ask the user whether or not to save the file."/>
		</enumeration>

		<command name="close" code="coreclos" description="Close a document.">
			<cocoa class="NSCloseCommand"/>
			<direct-parameter type="specifier"
				description="the document(s) or window(s) to close."/>
			<parameter name="saving" code="savo" type="save options" optional="yes"
				description="Whether or not changes should be saved before closing.">
				<cocoa key="SaveOptions"/>
			</parameter>
			<parameter name="saving in" code="kfil" type="file" optional="yes"
				description="The file in which to save the document.">
				<cocoa key="File"/>
			</parameter>
		</command>

		<command name="save" code="coresave" description="Save a document.">
			<direct-parameter type="specifier"
				description="The document(s) or window(s) to save."/>
			<parameter name="in" code="kfil" type="file" optional="yes"
				description="The file in which to save the document.">
				<cocoa key="File"/>
			</parameter>
			<parameter name="as" code="fltp" type="text" optional="yes"
				description="The type of file to save.">
				<cocoa key="FileType"/>
			</parameter>
		</command>

		<enumeration name="printing error handling" code="enum">
			<enumerator name="standard" code="lwst"
				description="Standard PostScript error handling"/>
			<enumerator name="detailed" code="lwdt"
				description="print a detailed report of PostScript errors"/>
		</enumeration>

		<record-type name="print settings" code="pset">
			<property name="copies" code="lwcp" type="integer"
				description="the number of copies of a document to be printed">
				<cocoa key="NSCopies"/>
			</property>
			<property name="collating" code="lwcl" type="boolean"
				description="Should printed copies be collated?">
				<cocoa key="NSMustCollate"/>
			</property>
			<property name="starting page" code="lwfp" type="integer"
				description="the first page of the document to be printed">
				<cocoa key="NSFirstPage"/>
			</property>
			<property name="ending page" code="lwlp" type="integer"
				description="the last page of the document to be printed">
				<cocoa key="NSLastPage"/>
			</property>
			<property name="pages across" code="lwla" type="integer"
				description="number of logical pages laid across a physical page">
				<cocoa key="NSPagesAcross"/>
			</property>
			<property name="pages down" code="lwld" type="integer"
				description="number of logical pages laid out down a physical page">
				<cocoa key="NSPagesDown"/>
			</property>
			<property name="error handling" code="lweh" type="printing error handling"
				description="how errors are handled">
				<cocoa key="NSDetailedErrorReporting"/>
			</property>
			<property name="fax number" code="faxn" type="text"
				description="for fax number">
				<cocoa key="NSFaxNumber"/>
			</property>
			<property name="target printer" code="trpr" type="text"
				description="for target printer">
				<cocoa key="NSPrinterName"/>
			</property>
		</record-type>

		<command name="print" code="aevtpdoc" description="Print a document.">
			<direct-parameter
				description="The file(s), document(s), or window(s) to be printed.">
				<type type="file" list="yes"/>
				<type type="specifier"/>
			</direct-parameter>
			<parameter name="with properties" code="prdt" type="print settings" optional="yes"
				description="The print settings to use.">
				<cocoa key="PrintSettings"/>
			</parameter>
			<parameter name="print dialog" code="pdlg" type="boolean" optional="yes"
				description="Should the application show the print dialog?">
				<cocoa key="ShowPrintDialog"/>
			</parameter>
		</command>

		<command name="quit" code="aevtquit" description="Quit the application.">
    <cocoa class="NSQuitCommand"/>
	    <parameter name="saving" code="savo" type="save options" optional="yes"
				description="Whether or not changed documents should be saved before closing.">
				<cocoa key="SaveOptions"/>
			</parameter>
		</command>

		<command name="count" code="corecnte"
			description="Return the number of elements of a particular class within an object.">
			<cocoa class="NSCountCommand"/>
			<direct-parameter type="specifier"
				description="the object whose elements are to be counted"/>
			<parameter name="each" code="kocl" type="type" optional="yes"
				description="The class of objects to be counted.">
				<cocoa key="ObjectClass"/>
			</parameter>
			<result type="integer" description="the number of elements"/>
		</command>

		<command name="delete" code="coredelo" description="Delete an object.">
			<cocoa class="NSDeleteCommand"/>
			<direct-parameter type="specifier" description="the object to delete"/>
		</command>

		<command name="duplicate" code="coreclon"
			description="Copy object(s) and put the copies at a new location.">
			<cocoa class="NSCloneCommand"/>
			<direct-parameter type="specifier"
				description="the object(s) to duplicate"/>
			<parameter name="to" code="insh" type="location specifier" optional="yes"
				description="The location for the new object(s).">
				<cocoa key="ToLocation"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" optional="yes"
				description="Properties to be set in the new duplicated object(s).">
				<cocoa key="WithProperties"/>
			</parameter>
			<result type="specifier" description="the duplicated object(s)"/>
		</command>

		<command name="exists" code="coredoex" description="Verify if an object exists.">
			<cocoa class="NSExistsCommand"/>
			<direct-parameter type="any" description="the object in question"/>
			<result type="boolean" description="true if it exists, false if not"/>
		</command>

		<command name="make" code="corecrel" description="Make a new object.">
			<cocoa class="NSCreateCommand"/>
			<parameter name="new" code="kocl" type="type"
				description="The class of the new object.">
				<cocoa key="ObjectClass"/>
			</parameter>
			<parameter name="at" code="insh" type="location specifier" optional="yes"
				description="The location at which to insert the object.">
				<cocoa key="Location"/>
			</parameter>
			<parameter name="with data" code="data" type="any" optional="yes"
				description="The initial contents of the object.">
				<cocoa key="ObjectData"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" optional="yes"
				description="The initial values for properties of the object.">
				<cocoa key="KeyDictionary"/>
			</parameter>
			<result type="specifier" description="to the new object"/>
		</command>

		<command name="move" code="coremove" description="Move object(s) to a new location.">
			<cocoa class="NSMoveCommand"/>
			<direct-parameter type="specifier" description="the object(s) to move"/>
			<parameter name="to" code="insh" type="location specifier"
				description="The new location for the object(s).">
				<cocoa key="ToLocation"/>
			</parameter>
			<result type="specifier" description="the moved object(s)"/>
		</command>

		<class name="application" code="capp"
			description="The application's top-level scripting object.">
			<cocoa class="NSApplication"/>
      <element type="document"><cocoa key="orderedDocuments" /></element>
      <element type="window"><cocoa key="orderedWindows" /></element>
			<property name="name" code="pnam" type="text" access="r"
				description="The name of the application."/>
			<property name="frontmost" code="pisf" type="boolean" access="r"
				description="Is this the frontmost (active) application?">
				<cocoa key="isActive"/>
			</property>
			<property name="version" code="vers" type="text" access="r"
				description="The version of the application."/>
		</class>
  <class name="window" code="wind" description="The application's windows.">
    <cocoa class="NSWindow"/>
    <property name="document" code="docu" type="document" access="r" description="The document whose contents are displayed in the window."/>
    <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
      <cocoa key="title"/>
    </property>
    <property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
      <cocoa key="uniqueID"/>
    </property>
    <property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
      <cocoa key="orderedIndex"/>
    </property>
    <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
      <cocoa key="boundsAsQDRect"/>
    </property>
    <property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
      <cocoa key="hasCloseBox"/>
    </property>
    <property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
      <cocoa key="isMiniaturizable"/>
    </property>
    <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
      <cocoa key="isMiniaturized"/>
    </property>
    <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
      <cocoa key="isResizable"/>
    </property>
    <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
      <cocoa key="isVisible"/>
    </property>
    <property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
      <cocoa key="isZoomable"/>
    </property>
    <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
      <cocoa key="isZoomed"/>
    </property>
    <responds-to name="close">
      <cocoa method="handleCloseScriptCommand:"/>
    </responds-to>
    <responds-to name="print">
      <cocoa method="handlePrintScriptCommand:"/>
    </responds-to>
    <responds-to name="save">
      <cocoa method="handleSaveScriptCommand:"/>
    </responds-to>
  </class>
  <class name="document" code="docu" description="A playlist document" plural="documents">
    <cocoa class="TDiaryDocument"/>
    <element type="movie" ><cocoa key="modelMovies" /></element>
    <property name="window" code="wind" type="window" access="r" description="the window of the document">
      <cocoa key="windowForSheet" />
    </property>
    <property name="id" code="ID  " type="integer" access="r" description="the ID of the document" >
      <cocoa key="orderedID" />
    </property>
    <property name="index" code="pidx" type="integer" access="r" description="the index of the document" >
      <cocoa key="orderedIndex" />
    </property>
    <property name="name" code="pnam" type="text" access="r" description="the document's name." >
      <cocoa key="displayName" />
    </property>
    <responds-to name="close">
      <cocoa method="handleCloseScriptCommand:"/>
    </responds-to>
    <responds-to name="print">
      <cocoa method="handlePrintScriptCommand:"/>
    </responds-to>
    <responds-to name="save">
      <cocoa method="handleSaveScriptCommand:"/>
    </responds-to>
  </class>

	</suite>

<suite name="Vidnik Suite" code="ViRe" description="Vidnik specific commands." >
  <command name="clear" code="ViReclea" description="Clear the current selection">
    <direct-parameter type="any" description="the object containing the selection to clear" />
  </command>
  <command name="copy" code="misccopy" description="Copy an object to the clipboard">
    <direct-parameter type="specifier" description="the object containing the selection to copy" />
  </command>
  <command name="cut" code="misccut " description="Cut an object to the clipboard">
    <direct-parameter type="specifier" description="the object containing the selection to cut" />
  </command>
  <command name="paste" code="miscpast" description="Paste an object from the clipboard">
    <direct-parameter type="specifier" description="the object to paste into" />
  </command>
  <command name="play" code="ViReplay" description="Play the movie.">
    <direct-parameter type="movie" description="the movie to play" />
  </command>
  <command name="pause" code="ViRepaus" description="Pause a movie or recording.">
    <direct-parameter type="movie" description="the movie to pause" />
  </command>
  <command name="record" code="ViRereco" description="Record the movie.">
    <direct-parameter type="movie" description="the movie to record" />
  </command>
  <command name="redo" code="miscredo" description="Redo the action of the previous event or user interaction" />
  <command name="rewind" code="ViRerewi" description="Rewind a movie to the beginning">
    <direct-parameter type="specifier" description="the movie to rewind" />
  </command>
  <command name="select" code="ViReslct" description="Select a range of time">
    <direct-parameter type="movie" description="the movie whose selection is to be set" />
    <parameter name="at" code="stqt" type="real" optional="yes" description="starting time, in seconds, of the selection" >
      <cocoa key="StartTime"/>
    </parameter>
    <parameter name="to" code="enqt" type="real" optional="yes" description="end time, in seconds, of the selection" >
      <cocoa key="StopTime"/>
    </parameter>
  </command>
  <command name="select all" code="ViReslca" description="Select the entire movie">
    <direct-parameter type="specifier" description="the movie to select" />
  </command>
  <command name="select none" code="ViReslcn" description="Set the selection of the movie to nothing">
    <direct-parameter type="specifier" description="the movie to select" />
  </command>
  <command name="step backward" code="ViRestba" description="Move the current time backward">
    <direct-parameter type="movie" description="the movie to step" />
    <parameter name="by" code="stpc" type="integer" optional="yes" description="number of steps" >
      <cocoa key="steps"/>
    </parameter>
  </command>
  <command name="step forward" code="ViRestfo" description="Move the current time forward">
    <direct-parameter type="movie" description="the movie to step" />
    <parameter name="by" code="stpc" type="integer" optional="yes" description="number of steps" >
      <cocoa key="steps"/>
    </parameter>
  </command>
  <command name="stop" code="ViRestop" description="Stop playing or recording a movie.">
    <direct-parameter type="movie" description="the movie to stop" />
  </command>
  <command name="trim" code="ViReptri" description="Remove all content before and after the current selection">
    <direct-parameter type="movie" description="movie" />
  </command>
  <command name="undo" code="miscundo" description="Undo the action of the previous event or user interaction" />
  <command name="new movie recording" code="ViRenavr" description="Create a new movie recording.">
    <direct-parameter type="specifier" description="the application" />
  </command>
  <class name="movie" code="movi" description="A movie file" plural="movies">
    <cocoa class="TDModelMovie"/>
    <property name="state" code="stat" type="rcst" access="r" description="state of the recording" >
      <cocoa key="recordedState" />
    </property>
    <property name="data size" code="dsiz" type="integer" access="r" description="the data size (in bytes) of the movie" >
      <cocoa key="dataSize" />
    </property>
    <property name="original file" code="mvfl" type="file"  access="r" description="the file containing the movie" >
      <cocoa key="fileURL" />
    </property>
    <property name="selection duration" code="seld" type="real" description="the duration of the movie selection (in seconds)" >
      <cocoa key="selectionDuration" />
    </property>
    <property name="selection end" code="sele" type="real" description="the time in seconds of the end of the movie selection" >
      <cocoa key="selectionEnd" />
    </property>
    <property name="selection start" code="sels" type="real" description="the time in seconds of the start of the movie selection" >
      <cocoa key="selectionStart" />
    </property>
    <property name="id" code="ID  " type="integer" access="r" description="the ID of the movie" >
      <cocoa key="orderedID" />
    </property>
    <property name="index" code="pidx" type="integer" access="r" description="the index of the movie" >
      <cocoa key="orderedIndex" />
    </property>
    <property name="name" code="pnam" type="text" description="the movie's name." >
      <cocoa key="title" />
    </property>
    <property name="category" code="Cate" type="text" description="the movie's category." />
    <property name="description" code="Desc" type="text" description="the movie's description." >
      <cocoa key="details" />
    </property>
    <property name="duration" code="durn" type="real" access="r" description="the duration of the movie in seconds" >
      <cocoa key="duration" />
    </property>
    <property name="keywords" code="Keys" description="the keywords of the movie" >
      <type type="text" list="yes" />
      <cocoa key="keywords" />
    </property>
    <property name="private" code="Priv" type="boolean" description="when uploaded, is this movie not publicly visible" >
      <cocoa key="isPrivate" />
    </property>
    <responds-to name="pause"><cocoa method="handlePauseScriptCommand:"/></responds-to>
    <responds-to name="play"><cocoa method="handlePlayScriptCommand:"/></responds-to>
    <responds-to name="record"><cocoa method="handleRecordScriptCommand:"/></responds-to>
    <responds-to name="select"><cocoa method="handleSelectScriptCommand:"/></responds-to>
    <responds-to name="select all"><cocoa method="handleSelectAllScriptCommand:"/></responds-to>
    <responds-to name="select none"><cocoa method="handleSelectNoneScriptCommand:"/></responds-to>
    <responds-to name="step backward"><cocoa method="handleStepBackwardScriptCommand:"/></responds-to>
    <responds-to name="step forward"><cocoa method="handleStepForwardScriptCommand:"/></responds-to>
    <responds-to name="stop"><cocoa method="handleStopScriptCommand:"/></responds-to>
  </class>
  <enumeration name="rcst" code="rcst">
    <enumerator name="previewing" code="prvw" description="previewing and ready to record" />
    <enumerator name="recording" code="recd" description="recording in progress" />
    <enumerator name="paused" code="pasd" description="movie paused" />
    <enumerator name="playing" code="play" description="movie playing" />
  </enumeration>
</suite>
</dictionary>
